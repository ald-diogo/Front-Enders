@page "/cadastro-nota"
@using CadastroNotasEstudantes.Services
@using FrontEnd_SIGA
@using FrontEnd_SIGA.Entidades
@inject NotaService NotaService
@inject EstudanteService EstudanteService

<h3>Cadastro de Notas</h3>

<EditForm Model="@novaNota" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Estudante:</label>
        <select @bind="novaNota.EstudanteId">
            @foreach (var estudante in EstudanteService.GetEstudantes())
            {
                <option value="@estudante.Id">@estudante.Nome</option>
            }
        </select>
    </div>

    <div>
        <label>Curso:</label>
        <select @bind="novaNota.EstudanteId">
            @foreach (var estudante in EstudanteService.GetEstudantes())
            {
                <option value="@estudante.Id">@estudante.Curso</option>
            }
        </select>
    </div>

    <div>
        <label>Disciplina:</label>
        <InputText @bind-Value="novaNota.Disciplina" />
    </div>

    <div>
        <label>Nota:</label>
        <InputNumber @bind-Value="novaNota.Valor" />
    </div>

    <button type="submit">Cadastrar</button>
</EditForm>

<h3>Lista de Notas</h3>
<ul>
    @foreach (var nota in NotaService.GetNotas())
    {
        var estudante = EstudanteService.GetEstudantes().FirstOrDefault(e => e.Id == nota.EstudanteId);
        <li>@estudante?.Nome - 
            @estudante?.Curso -
            @nota.Disciplina - 
            @nota.Valor
        </li>
    }
</ul>

@code {
    private Nota novaNota = new Nota();

    private void HandleValidSubmit()
    {
        NotaService.AddNota(novaNota);
        novaNota = new Nota();
    }
}

